#!/usr/bin/env bash

[ "up" = "$1" ] && \
  docker-compose up --detach

if [ "frontend" = "$1" ]; then
  docker-compose up -d && \
    docker-compose exec frontend npm start
fi

if [ "adminpanel" = "$1" ]; then
  docker-compose up -d && \
    docker-compose exec adminpanel npm start
fi

[ "down" = "$1" ] && \
  docker-compose down --volumes

[ "logs" = "$1" ] && \
  docker-compose logs --follow

[ "test" = "$1" ] && \
  docker-compose exec alvtime-admin-react-pwa npm test

[ "prune" = "$1" ] && \
  docker system prune --force

if [ "build" = "$1" ]; then
  source scripts/buildServices.sh
fi

if [ "plan" = "$1" ]; then
  shift
  source scripts/setup.sh "$1"
  source scripts/planInfrastructure.sh
  source packages/infrastructure/cleanup.sh
fi

if [ "deploy" = "$1" ]; then
  shift
  source scripts/setup.sh "$1"
  source scripts/planInfrastructure.sh
  if [ "$1" == 'test' ]
  then
    source scripts/buildServices.sh
    az acr login --name acralvtime
    source scripts/pushServices.sh
  fi
  source scripts/deployInfrastructure.sh
  source scripts/deployServices.sh

  source packages/infrastructure/cleanup.sh
fi
