#!/usr/bin/env bash

set -e

KEY_VAULT="alvtime-dev-kv"

function getSecret() {
  az keyvault secret show --vault-name $KEY_VAULT --name $1 | jq '.value' -r
}

[ "up" = "$1" ] && \
  docker-compose up

if [ "frontend" = "$1" ]; then
  docker-compose up --detach frontend
  docker-compose exec frontend npm start
fi

if [ "adminpanel" = "$1" ]; then
  docker-compose up --detach adminpanel
  docker-compose exec adminpanel npm start
fi

if [ "slack-app" = "$1" ]; then
  export NGROK_AUTH="$(getSecret ngrok-auth)"
  export AZURE_AD_CLIENT_SECTRET="$(getSecret azure-ad-client-secret)"
  export SLACK_BOT_TOKEN="$(getSecret slack-bot-token)"
  export SLACK_SIGNING_SECRET="$(getSecret slack-signing-secret)"
  export NGROK_HOSTNAME="$(getSecret ngrok-hostname)"
  export HOST="https://$NGROK_HOSTNAME"

  docker-compose up --detach slack-app
  docker-compose exec slack-app bash
fi

[ "down" = "$1" ] && \
  docker-compose down --volumes

[ "logs" = "$1" ] && \
  docker-compose logs --follow

[ "prune" = "$1" ] && \
  docker system prune --force

if [ "build" = "$1" ]; then
  source scripts/buildServices.sh
fi

if [ "deploy" = "$1" ]; then
  shift
  source scripts/setup.sh "$1"
  if [ "$1" == 'test' ]
  then
    source scripts/buildServices.sh
    az acr login --name "$CONTAINER_REGISTRY"
    source scripts/pushServices.sh
  fi
  source scripts/deployServices.sh
fi
