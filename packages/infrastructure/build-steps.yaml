steps:
  - checkout: self
    fetchDepth: 1

  - task: TerraformInstaller@0
    displayName: Install Terraform
    inputs:
      terraformVersion: "0.14.0"

  - task: TerraformTaskV1@0
    displayName: terraform init
    inputs:
      provider: azurerm
      workingDirectory: packages/infrastructure
      command: init
      backendServiceArm: "$(subscription)"
      backendAzureRmResourceGroupName: Alvtime-common
      backendAzureRmStorageAccountName: "$(tf-state-storage-account)"
      backendAzureRmContainerName: terraformstate
      backendAzureRmKey: tf.tfstate

  - task: TerraformTaskV1@0
    displayName: terraform validate
    inputs:
      provider: azurerm
      workingDirectory: packages/infrastructure
      command: validate

  # - bash: docker run -t -v "$(System.DefaultWorkingDirectory)":/tf bridgecrew/checkov -d /tf
  #   displayName: Checkov Static Code Analysis
  #   workingDirectory: packages/infrastructure

  - task: TerraformTaskV1@0
    displayName: terraform plan
    inputs:
      provider: azurerm
      environmentServiceNameAzureRM: "$(subscription)"
      workingDirectory: packages/infrastructure
      command: plan
      commandOptions: >
        -input=false
        -var "env=$(env)"
        -var "aks_service_principal_client_id=$(aks-service-principal-client-id)"
        -var "aks_service_principal_client_secret=$(aks-service-principal-client-secret)"
        -var "sql_server_administrator_login=$(sql-server-administrator-login)"
        -var "sql_server_administrator_login_password=$(sql-server-administrator-login-password)"
        -var "api_sql_firewall_rule_ip=$(api-sql-firewall-rule-ip)"


  - task: PublishBuildArtifacts@1
    displayName: Publish folder as build artifact
    inputs:
      pathtoPublish: packages/infrastructure
      artifactName: infrastructure
