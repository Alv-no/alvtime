steps:
  - task: TerraformInstaller@0
    displayName: Install Terraform v0.14.0
    inputs:
      terraformVersion: "0.14.0"

  - task: TerraformTaskV1@0
    displayName: Terraform init
    inputs:
      provider: "azurerm"
      workingDirectory: "$(Agent.BuildDirectory)/infrastructure"
      command: "init"
      backendServiceArm: "$(subscription)"
      backendAzureRmResourceGroupName: "Alvtime-common"
      backendAzureRmStorageAccountName: "$(storageAccount)"
      backendAzureRmContainerName: "terraformstate"
      backendAzureRmKey: "tf.tfstate"
      commandOptions: "-upgrade=true"

  - task: TerraformTaskV1@0
    name: TerraformOutputs
    displayName: Terraform apply tfplan
    inputs:
      provider: "azurerm"
      workingDirectory: "$(Agent.BuildDirectory)/infrastructure"
      command: "apply"
      commandOptions: tfplan
      environmentServiceNameAzureRM: "$(subscription)"

  - bash: |
      DB_CONNECTION_STRING=$(cat $(TerraformOutputs.jsonOutputVariablesPath) | jq '.slack_db_connection_strings.value[0]' -r)
      echo "##vso[task.setvariable variable=DB_CONNECTION_STRING;issecret=true]$DB_CONNECTION_STRING"
      DB_USER=$(cat $(TerraformOutputs.jsonOutputVariablesPath) | jq '.slack_db_name.value' -r)
      echo "##vso[task.setvariable variable=DB_USER;issecret=true]$DB_USER"
      DB_PASSWORD=$(cat $(TerraformOutputs.jsonOutputVariablesPath) | jq '.slack_db_primary_key.value' -r)
      echo "##vso[task.setvariable variable=DB_PASSWORD;issecret=true]$DB_PASSWORD"
      RESOURCE_GROUP=$(cat $(TerraformOutputs.jsonOutputVariablesPath) | jq '.resource_group_name.value' -r)
      echo "##vso[task.setvariable variable=RESOURCE_GROUP;issecret=true]$RESOURCE_GROUP"
      CLUSTER_NAME=$(cat $(TerraformOutputs.jsonOutputVariablesPath) | jq '.kubernetes_cluster_name.value' -r)
      echo "##vso[task.setvariable variable=CLUSTER_NAME;issecret=true]$CLUSTER_NAME"
      SQL_SERVER_NAME=$(cat $(TerraformOutputs.jsonOutputVariablesPath) | jq '.sql_server_name.value' -r)
      SQL_DATABASE_NAME=$(cat $(TerraformOutputs.jsonOutputVariablesPath) | jq '.sql_database_name.value' -r)
      SQL_CONNECTION_STRING="Server=tcp:$SQL_SERVER_NAME.database.windows.net\,1433;Initial Catalog=$SQL_DATABASE_NAME;Persist Security Info=False;User ID=$SQL_SERVER_ADMINISTRATOR_LOGIN;Password=$SQL_SERVER_ADMINISTRATOR_LOGIN_PASSWORD;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
      echo "##vso[task.setvariable variable=SQL_CONNECTION_STRING;issecret=true]$SQL_CONNECTION_STRING"
    env:
      SQL_SERVER_ADMINISTRATOR_LOGIN: "$(sql-server-administrator-login)"
      SQL_SERVER_ADMINISTRATOR_LOGIN_PASSWORD: "$(sql-server-administrator-login-password)"

  - task: Kubernetes@1
    inputs:
      connectionType: "Azure Resource Manager"
      azureSubscriptionEndpoint: "$(subscription)"
      azureResourceGroup: "$(RESOURCE_GROUP)"
      kubernetesCluster: "$(CLUSTER_NAME)"
      useClusterAdmin: true
      command: "apply"
      useConfigurationFile: true
      configuration: "$(Agent.BuildDirectory)/infrastructure/cluster-issuer.yaml"
