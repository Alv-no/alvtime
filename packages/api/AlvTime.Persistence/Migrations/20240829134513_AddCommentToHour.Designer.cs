// <auto-generated />
using System;
using AlvTime.Persistence.DatabaseModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlvTime.Persistence.Migrations
{
    [DbContext(typeof(AlvTime_dbContext))]
    [Migration("20240829134513_AddCommentToHour")]
    partial class AddCommentToHour
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.AccessTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FriendlyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AccessTokens");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.AssociatedTasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("AssociatedTasks");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.CompensationRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("CompensationRate");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("InvoiceAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNr")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.EarnedOvertime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CompensationRate")
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId", "Date", "CompensationRate" }, "UC_EarnedOvertime")
                        .IsUnique();

                    b.ToTable("EarnedOvertime");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.EmploymentRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(7,2)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmploymentRate");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.HourRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("HourRate");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Hours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommentedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<short>("DayNumber")
                        .HasColumnType("smallint");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeRegistered")
                        .HasColumnType("datetime2");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(6,2)");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("User");

                    b.HasIndex(new[] { "Date", "TaskId", "User" }, "UC_hours_user_task")
                        .IsUnique();

                    b.ToTable("hours", (string)null);
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.PaidOvertime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CompensationRate")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HoursAfterCompRate")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("HoursBeforeCompRate")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "User", "Date", "CompensationRate" }, "UC_PaidOvertime")
                        .IsUnique();

                    b.ToTable("PaidOvertime");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Customer")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Customer");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.RegisteredFlex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CompensationRate")
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId", "Date", "CompensationRate" }, "UC_RegisteredFlex")
                        .IsUnique();

                    b.ToTable("RegisteredFlex");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("Favorite")
                        .HasColumnType("bit");

                    b.Property<bool>("Imposed")
                        .HasColumnType("bit");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Project")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Project");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.TaskFavorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskFavorites");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.VacationDaysEarnedOverride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("DaysEarned")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId", "Year" }, "UC_VacationDaysEarnedOverride")
                        .IsUnique();

                    b.ToTable("VacationDaysEarnedOverride");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.VDataDump", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("customerName");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<decimal?>("Earnings")
                        .HasColumnType("decimal(17,4)")
                        .HasColumnName("earnings");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<decimal>("HourRate")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool?>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("projectID");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("projectName");

                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("taskID");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("taskName");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("userName");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("value");

                    b.ToView("V_DataDump");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.AccessTokens", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.User", "User")
                        .WithMany("AccessTokens")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_AccessTokens_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.AssociatedTasks", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.Task", "Task")
                        .WithMany("AssociatedTasks")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK_AssociatedTasks_Task");

                    b.HasOne("AlvTime.Persistence.DatabaseModels.User", "User")
                        .WithMany("AssociatedTasks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_AssociatedTasks_User");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.CompensationRate", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.Task", "Task")
                        .WithMany("CompensationRate")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK_CompensationRate_Task");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.EarnedOvertime", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.User", "User")
                        .WithMany("EarnedOvertime")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_EarnedOvertime_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.EmploymentRate", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.User", "User")
                        .WithMany("EmploymentRate")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_EmploymentRate_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.HourRate", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.Task", "Task")
                        .WithMany("HourRate")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK_HourRate_Task");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Hours", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.Task", "Task")
                        .WithMany("Hours")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK_hours_Task");

                    b.HasOne("AlvTime.Persistence.DatabaseModels.User", "UserNavigation")
                        .WithMany("Hours")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("FK_hours_User");

                    b.Navigation("Task");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.PaidOvertime", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.User", "UserNavigation")
                        .WithMany("PaidOvertime")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("FK_PaidOvertime_User");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Project", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.Customer", "CustomerNavigation")
                        .WithMany("Project")
                        .HasForeignKey("Customer")
                        .IsRequired()
                        .HasConstraintName("FK_Project_Customer");

                    b.Navigation("CustomerNavigation");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.RegisteredFlex", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.User", "User")
                        .WithMany("RegisteredFlex")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_RegisteredFlex_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Task", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.Project", "ProjectNavigation")
                        .WithMany("Task")
                        .HasForeignKey("Project")
                        .IsRequired()
                        .HasConstraintName("FK_Task_Project");

                    b.Navigation("ProjectNavigation");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.TaskFavorites", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.Task", "Task")
                        .WithMany("TaskFavorites")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskFavorites_Task");

                    b.HasOne("AlvTime.Persistence.DatabaseModels.User", "User")
                        .WithMany("TaskFavorites")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskFavorites_User");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.VacationDaysEarnedOverride", b =>
                {
                    b.HasOne("AlvTime.Persistence.DatabaseModels.User", "User")
                        .WithMany("VacationDaysEarnedOverride")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_VacationDaysEarnedOverride_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Customer", b =>
                {
                    b.Navigation("Project");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Project", b =>
                {
                    b.Navigation("Task");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.Task", b =>
                {
                    b.Navigation("AssociatedTasks");

                    b.Navigation("CompensationRate");

                    b.Navigation("HourRate");

                    b.Navigation("Hours");

                    b.Navigation("TaskFavorites");
                });

            modelBuilder.Entity("AlvTime.Persistence.DatabaseModels.User", b =>
                {
                    b.Navigation("AccessTokens");

                    b.Navigation("AssociatedTasks");

                    b.Navigation("EarnedOvertime");

                    b.Navigation("EmploymentRate");

                    b.Navigation("Hours");

                    b.Navigation("PaidOvertime");

                    b.Navigation("RegisteredFlex");

                    b.Navigation("TaskFavorites");

                    b.Navigation("VacationDaysEarnedOverride");
                });
#pragma warning restore 612, 618
        }
    }
}
