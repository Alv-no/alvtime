name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r)

trigger:
  - master

pr: none

pool:
  vmImage: ubuntu-18.04

stages:
  - stage: testbuild
    displayName: Test environment
    variables:
      - group: azure-credentials-test
    jobs:
      - job: testbuild
        displayName: Plan and build
        steps:
          - checkout: self
            fetchDepth: 1

          - template: installDependencies.yaml

          - task: Bash@3
            displayName: Build and publish services
            env:
              AZURE_SERVICE_PRINCIPAL_USERNAME: $(azure-service-principal-username)
              AZURE_SERVICE_PRINCIPAL_PASSWORD: $(azure-service-principal-password)
              AZURE_TENANT_ID: $(azure-tenant-id)
              AZURE_SUBSCRIPTION_ID: $(azure-subscription-id)
            inputs:
              targetType: "inline"
              script: |
                az login --service-principal \
                  --username "$AZURE_SERVICE_PRINCIPAL_USERNAME" \
                  --password "$AZURE_SERVICE_PRINCIPAL_PASSWORD" \
                  --tenant "$AZURE_TENANT_ID"

                az account set --subscription $AZURE_SUBSCRIPTION_ID

                # Authenticate Acure container registry
                docker login alvkubernetesclustertestacr.azurecr.io \
                  --username $AZURE_SERVICE_PRINCIPAL_USERNAME \
                  --password $AZURE_SERVICE_PRINCIPAL_PASSWORD

                # Run scripts to build for test environment
                source scripts/setup.sh test --no-input
                source scripts/buildServices.sh
                source scripts/pushServices.sh

  - stage: test
    displayName: Test environment
    variables:
      - group: azure-credentials-test
    jobs:
      - deployment: test
        displayName: Deploy
        environment: Test
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  fetchDepth: 1

                - template: installDependencies.yaml

                - task: Bash@3
                  displayName: Deploy services
                  env:
                    AZURE_SERVICE_PRINCIPAL_USERNAME: $(azure-service-principal-username)
                    AZURE_SERVICE_PRINCIPAL_PASSWORD: $(azure-service-principal-password)
                    AZURE_TENANT_ID: $(azure-tenant-id)
                    AZURE_SUBSCRIPTION_ID: $(azure-subscription-id)
                  inputs:
                    targetType: "inline"
                    script: |
                      az login --service-principal \
                        --username "$AZURE_SERVICE_PRINCIPAL_USERNAME" \
                        --password "$AZURE_SERVICE_PRINCIPAL_PASSWORD" \
                        --tenant "$AZURE_TENANT_ID"

                      az account set --subscription $AZURE_SUBSCRIPTION_ID

                      source scripts/setup.sh test --no-input
                      source scripts/deployServices.sh

  - stage: prod
    displayName: Production environment
    variables:
      - group: azure-credentials-prod
    jobs:
      - deployment: prod
        displayName: Deploy
        environment: Prod
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  fetchDepth: 1

                - template: installDependencies.yaml

                - task: Bash@3
                  displayName: Deploy services
                  env:
                    AZURE_SERVICE_PRINCIPAL_USERNAME: $(azure-service-principal-username)
                    AZURE_SERVICE_PRINCIPAL_PASSWORD: $(azure-service-principal-password)
                    AZURE_TENANT_ID: $(azure-tenant-id)
                    AZURE_SUBSCRIPTION_ID: $(azure-subscription-id)
                  inputs:
                    targetType: "inline"
                    script: |
                      az login --service-principal \
                        --username "$AZURE_SERVICE_PRINCIPAL_USERNAME" \
                        --password "$AZURE_SERVICE_PRINCIPAL_PASSWORD" \
                        --tenant "$AZURE_TENANT_ID"

                      az account set --subscription $AZURE_SUBSCRIPTION_ID

                      # Run build script for production env
                      source scripts/setup.sh prod --no-input
                      source scripts/deployServices.sh
