name: frontend-docker-publish-releases

on:
  push:
    branches:
      - releases/*

env:
  IMAGE_NAME: alvnoas/alvtime-vue-pwa
  IMAGE_NAME_LOCAL: alvnoas/alvtime-vue-pwa-local

jobs:
  # Push image to Docker Hub
  push_to_docker_hub:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build frontend images
        working-directory: "./packages/frontend"
        run: |
          docker build . --tag image \
          --build-arg VUE_APP_API_HOST=https://alvtime-api-prod.azurewebsites.net \
          --build-arg VUE_APP_ACCESS_SCOPE=api://3644a03b-f801-4b67-b487-3353684fe7fc/access_as_user \
          --build-arg VUE_APP_CLIENT_ID=3644a03b-f801-4b67-b487-3353684fe7fc

          docker build . --tag image-local \
          --build-arg VUE_APP_API_HOST=http://localhost:3000 \
          --build-arg VUE_APP_ACCESS_SCOPE=api://c9126a83-01c3-43c0-8bb3-298d352d2d7f/access_as_user \
          --build-arg VUE_APP_CLIENT_ID=c9126a83-01c3-43c0-8bb3-298d352d2d7f

      - uses: anchore/scan-action@v2
        with:
          image: image:latest
          fail-build: true
          severity-cutoff: critical

      - name: grype scan JSON results
        run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push frontend images
        run: |

          echo IMAGE_NAME=$IMAGE_NAME

          docker tag image $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

          echo IMAGE_NAME_LOCAL=$IMAGE_NAME_LOCAL

          docker tag image-local $IMAGE_NAME_LOCAL:latest
          docker push $IMAGE_NAME_LOCAL:latest
